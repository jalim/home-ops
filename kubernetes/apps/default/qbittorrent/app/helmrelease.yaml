---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # dependsOn:
  #   - name: rook-ceph-cluster
  #     namespace: rook-ceph
  #   - name: volsync
  #     namespace: volsync
  values:
    controller:
      type: statefulset
      # annotations:
        # configmap.reloader.stakater.com/reload: qbittorrent-scripts
        # secret.reloader.stakater.com/reload: cross-seed-secret
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.4@sha256:f0a74313d750bc437ba2ad34f3412de5ab9a978f3f5b74227a1bda69271fef3e
    env:
      TZ: Australia/Perth
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &bittorrentPort 50410
      QBT_Application__MemoryWorkingSetLimit: 4000
    service:
      main:
        ports:
          http:
            port: *port
          # cross-seed:
          #   port: 2468
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.1.2.23
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
            targetPort: *bittorrentPort
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
        hosts:
          - host: &host "qb.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn
    # Note: If downloading very large torrents it might be worth using NFS for your download directory.
    # Beware if you are downloading torrents directly to a ZFS dataset that dataset will accrue fragmentation.
    persistence:
      media:
        enabled: true
        type: nfs
        server: 10.1.2.205
        path: /mnt/dead/media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 4Gi
    # sidecars:
    #   TODO: cross-seed doesn't work with qBittorrent & SQLite
    #   https://github.com/cross-seed/cross-seed/issues/365
    #   cross-seed:
    #     image: ghcr.io/cross-seed/cross-seed:version-5.2.0
    #     imagePullPolicy: IfNotPresent
    #     args: ["daemon"]
    #     volumeMounts:
    #       - { name: config, mountPath: /config }
    #       - { name: cross-seed-config, mountPath: /config/config.js, subPath: config.js, readOnly: true }
    #   reannounce:
    #     image: ghcr.io/buroa/qbittools:v0.1.1
    #     imagePullPolicy: IfNotPresent
    #     args: ["reannounce", "-s", "localhost", "-p", "80"]
