---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyplex-watched
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        type: cronjob
        cronjob:
          schedule: "@daily"
        containers:
          main:
            image:
              repository: luigi311/jellyplex-watched
              tag: 5.0.0-slim@sha256:0460a7aab661291d0901f81fdfe137eb25a6cbc6b00d4883d6a9ab4029b2d2b2
            env:
              TZ: "Australia/Perth"
              ## Do not mark any shows/movies as played and instead just output to log if they would of been marked.
              DRYRUN: "False"
              ## Additional logging information
              DEBUG: "True"
              ## Debugging level, "info" is default, "debug" is more verbose
              DEBUG_LEVEL: "debug"
              ## How often to run the script in seconds
              #SLEEP_DURATION: "3600"
              # SLEEP_DURATION: "21600"
              RUN_ONLY_ONCE: "True"
              ## Log file where all output will be written to
              LOGFILE: "log.log"
              ## Map usernames between plex and jellyfin in the event that they are different, order does not matter
              #USER_MAPPING: { "testuser2": "testuser3" }
              USER_MAPPING: '{ "${SECRET_PLEX_USER}": "${SECRET_JELLYFIN_USER}" }'
              ## Map libraries between plex and jellyfin in the even that they are different, order does not matter
              #LIBRARY_MAPPING: { "Shows": "TV Shows" }
              LIBRARY_MAPPING: '{ "Shows": "TV Shows" }'
              ## Recommended to use token as it is faster to connect as it is direct to the server instead of going through the plex servers
              ## URL of the plex server, use hostname or IP address if the hostname is not resolving correctly
              ## Comma seperated list for multiple servers
              #PLEX_BASEURL: "http://localhost:32400"
              PLEX_BASEURL: "https://plex.default.svc.cluster.local:32400"
              ## Plex token https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
              #PLEX_TOKEN: "SuperSecretToken"
              PLEX_TOKEN: "${SECRET_PLEX_TOKEN}"
              ## If not using plex token then use username and password of the server admin along with the servername
              #PLEX_USERNAME: ""
              #PLEX_PASSWORD: ""
              #PLEX_SERVERNAME: "Plex Server"
              ## Skip hostname validation for ssl certificates.
              SSL_BYPASS: "True"
              ## Jellyfin server URL, use hostname or IP address if the hostname is not resolving correctly
              ## Comma seperated list for multiple servers
              JELLYFIN_BASEURL: "http://jellyfin.default.svc.cluster.local:8096"
              ## Jellyfin api token, created manually by logging in to the jellyfin server admin dashboard and creating an api key
              #JELLYFIN_TOKEN: "SuperSecretToken"
              JELLYFIN_TOKEN: "${SECRET_JELLYFIN_TOKEN}"
              ## Blacklisting/Whitelisting libraries, library types such as Movies/TV Shows, and users. Mappings apply so if the mapping for the user or library exist then both will be excluded.
              #BLACKLIST_LIBRARY: ""
              WHITELIST_LIBRARY: "Movies,TV Shows,Shows"
              #BLACKLIST_LIBRARY_TYPE: ""
              #WHITELIST_LIBRARY_TYPE: ""
              #BLACKLIST_USERS: ""
              #WHITELIST_USERS: "testuser1,testuser2"
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 200Mi
    service:
      main:
        enabled: false
